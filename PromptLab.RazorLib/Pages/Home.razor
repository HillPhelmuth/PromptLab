@using PromptLab.RazorLib.ChatModels
@using PromptLab.Core.Plugins
@using Microsoft.Extensions.Configuration
@inherits AppComponentBase
<RadzenRow>
	<RadzenColumn Size="4">

		<RadzenCard>
			<div>
				@if (!string.IsNullOrEmpty(_savedPrompt))
				{
					<RadzenText TextStyle="TextStyle.Caption">Saved as: @_savedPrompt</RadzenText>
				}
			</div>
			<RadzenFormField Text="System Prompt Editor" Style="width:100%">
				<RadzenCard Style="padding:.5rem; width:100%">
					<RadzenHtmlEditor @bind-Value=@AppState.ActiveSystemPromptHtml style="height: 75vh;width:100%" Execute="HandleExecute">
						<RadzenHtmlEditorUndo />
						<RadzenHtmlEditorRedo />
						<RadzenHtmlEditorSeparator />
						<RadzenHtmlEditorUnorderedList />
						<RadzenHtmlEditorOrderedList />
						<RadzenHtmlEditorFormatBlock />
						<RadzenHtmlEditorSeparator />
						<RadzenHtmlEditorSeparator />
						<RadzenHtmlEditorCustomTool CommandName="Save" Title="Save Prompt" Icon="save" IconColor="green" />
						<RadzenHtmlEditorCustomTool CommandName="Load" Title="Load Prompt" Icon="file_upload" IconColor="blue" />
						<RadzenHtmlEditorCustomTool CommandName="Improve" Title="Ask Expert Prompt Engineer For Help" Icon="psychology_alt" IconColor="black" />

					</RadzenHtmlEditor>
				</RadzenCard>

			</RadzenFormField>

		</RadzenCard>
	</RadzenColumn>
	<RadzenColumn Size="8" Style="position:relative">
		<RadzenCard>

			<RadzenButton Style="position:absolute; left:.5rem; top: 0" Variant="Variant.Text" Size="ButtonSize.ExtraSmall" Icon="close" Text="Clear" Click="ClearChat"></RadzenButton>
			<RadzenButton Style="position:absolute; right:.5rem; top: 0" Variant="Variant.Text" Size="ButtonSize.ExtraSmall" Icon="post_add" Text="Add Message" Click="AddMessage"></RadzenButton>
			<ChatView ResetOnClose="false" AllowRemove=true ViewId="chatWithSk" Height="80vh" IsLogProbView=AppState.IsLogProbView Timestamps=AppState.ShowTimestamps @ref=_chatView></ChatView>
		</RadzenCard>

		<RadzenCard Style="position:relative" Variant="Variant.Filled">
			<UserInput IsRequired="@(_chatView.ChatState.ChatMessages.LastOrDefault()?.Role == Role.Assistant)" ButtonLabel="Send" HelperText="User Input" MessageSubmit="HandleInput" IsBusy="_isBusy" CancelRequest="Cancel"></UserInput>
		</RadzenCard>
	</RadzenColumn>
</RadzenRow>

@code{
	private Task<bool> ValidateSettings()
	{
		var (isValid, message) = AppState.ChatModelSettings.Validate();
		if (isValid) return Task.FromResult(isValid);
			var notificationMessage = new NotificationMessage
				{
					Severity = NotificationSeverity.Error,
					Summary = $"Chat Model Settings Invalid - {message}",
					Detail = "Update Settings Here",
					Duration = 10000,
					Click = ShowSettings,
					CloseOnClick = true,
			DetailContent = ns => @<RadzenButton Text="Update Settings" Click="ShowSettings" /> };
		NotificationService.Notify(notificationMessage);
		return Task.FromResult(isValid);
	}
}